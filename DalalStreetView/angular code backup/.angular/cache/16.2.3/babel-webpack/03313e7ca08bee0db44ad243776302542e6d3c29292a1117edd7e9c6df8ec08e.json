{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction LoginComponent_mat_form_field_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-form-field\");\n    i0.ɵɵelement(1, \"input\", 11);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_p_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.error, \" \");\n  }\n}\nexport let LoginComponent = /*#__PURE__*/(() => {\n  var _class;\n  class LoginComponent {\n    constructor(http, formBuilder, router, baseUrl) {\n      this.http = http;\n      this.formBuilder = formBuilder;\n      this.router = router;\n      this.showotp = false;\n      this.submitEM = new EventEmitter();\n      this._baseUrl = baseUrl;\n    }\n    ngOnInit() {\n      this.loginForm = this.formBuilder.group({\n        username: ['', Validators.required],\n        password: ['', Validators.required],\n        accessToken: ['', Validators.required],\n        otp: ['']\n      });\n    }\n    submit() {\n      if (this.loginForm.valid) {\n        const data = {\n          userid: this.loginForm.value.username,\n          pwd: this.loginForm.value.password,\n          accessToken: this.loginForm.value.accessToken,\n          otp: this.loginForm.value.otp\n        };\n        this.http.post(this._baseUrl + 'api/kotaklogin', data).subscribe(result => {\n          if (result.message == \"200 OK\") {\n            this.router.navigateByUrl('/trade');\n            //window.location.href = baseUrl;\n            //this.submitEM.emit(this.loginForm.value);\n            //return result.userName;\n          } else if (result.message == \"418 TP\") {\n            this.showotp = true;\n            //window.location.href = baseUrl;\n            //this.submitEM.emit(this.loginForm.value);\n            //return result.userName;\n          }\n        }, error => console.error(error));\n      }\n    }\n  }\n  _class = LoginComponent;\n  _class.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || _class)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject('BASE_URL'));\n  };\n  _class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class,\n    selectors: [[\"app-login\"]],\n    inputs: {\n      error: \"error\"\n    },\n    outputs: {\n      submitEM: \"submitEM\"\n    },\n    decls: 23,\n    vars: 3,\n    consts: [[2, \"display\", \"flex\", \"justify-content\", \"center\", \"align-items\", \"center\", \"height\", \"80%\"], [2, \"width\", \"400px\", \"height\", \"350px\"], [2, \"margin-left\", \"30px\", \"margin-top\", \"30px\"], [2, \"margin-left\", \"10px\", 3, \"formGroup\", \"ngSubmit\"], [\"type\", \"text\", \"matInput\", \"\", \"placeholder\", \"Username\", \"formControlName\", \"username\"], [\"type\", \"password\", \"matInput\", \"\", \"placeholder\", \"Password\", \"formControlName\", \"password\"], [\"type\", \"text\", \"matInput\", \"\", \"placeholder\", \"AccessToken\", \"formControlName\", \"accessToken\"], [4, \"ngIf\"], [\"class\", \"error\", 4, \"ngIf\"], [1, \"button\"], [\"type\", \"submit\", \"mat-button\", \"\"], [\"type\", \"text\", \"matInput\", \"\", \"placeholder\", \"OTP\", \"formControlName\", \"otp\"], [1, \"error\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"mat-card\")(3, \"div\", 2)(4, \"mat-card-title\");\n        i0.ɵɵtext(5, \"Kotak Securities Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"mat-card-content\")(7, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_7_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵelementStart(8, \"p\")(9, \"mat-form-field\");\n        i0.ɵɵelement(10, \"input\", 4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"p\")(12, \"mat-form-field\");\n        i0.ɵɵelement(13, \"input\", 5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"p\")(15, \"mat-form-field\");\n        i0.ɵɵelement(16, \"input\", 6);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(17, \"p\");\n        i0.ɵɵtemplate(18, LoginComponent_mat_form_field_18_Template, 2, 0, \"mat-form-field\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(19, LoginComponent_p_19_Template, 2, 1, \"p\", 8);\n        i0.ɵɵelementStart(20, \"div\", 9)(21, \"button\", 10);\n        i0.ɵɵtext(22, \"Login\");\n        i0.ɵɵelementEnd()()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngIf\", ctx.showotp);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.error);\n      }\n    },\n    dependencies: [i4.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}