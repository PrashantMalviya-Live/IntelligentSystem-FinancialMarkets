{"ast":null,"code":"// source: src/app/protos/log.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\nvar google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');\ngoog.object.extend(proto, google_protobuf_timestamp_pb);\ngoog.exportSymbol('proto.logging.CData', null, global);\ngoog.exportSymbol('proto.logging.CStatus', null, global);\ngoog.exportSymbol('proto.logging.LogMessage', null, global);\ngoog.exportSymbol('proto.logging.OrderMessage', null, global);\ngoog.exportSymbol('proto.logging.PublishStatus', null, global);\ngoog.exportSymbol('proto.logging.Status', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.logging.LogMessage = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.logging.LogMessage, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.logging.LogMessage.displayName = 'proto.logging.LogMessage';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.logging.Status = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.logging.Status, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.logging.Status.displayName = 'proto.logging.Status';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.logging.OrderMessage = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.logging.OrderMessage, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.logging.OrderMessage.displayName = 'proto.logging.OrderMessage';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.logging.PublishStatus = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.logging.PublishStatus, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.logging.PublishStatus.displayName = 'proto.logging.PublishStatus';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.logging.CData = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.logging.CData, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.logging.CData.displayName = 'proto.logging.CData';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.logging.CStatus = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.logging.CStatus, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.logging.CStatus.displayName = 'proto.logging.CStatus';\n}\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.logging.LogMessage.prototype.toObject = function (opt_includeInstance) {\n    return proto.logging.LogMessage.toObject(opt_includeInstance, this);\n  };\n\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.logging.LogMessage} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n  proto.logging.LogMessage.toObject = function (includeInstance, msg) {\n    var f,\n      obj = {\n        algoid: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n        algoInstance: jspb.Message.getFieldWithDefault(msg, 2, 0),\n        logTime: (f = msg.getLogTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),\n        logLevel: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n        message: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n        messengerMethod: jspb.Message.getFieldWithDefault(msg, 6, \"\")\n      };\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.logging.LogMessage}\n */\nproto.logging.LogMessage.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.logging.LogMessage();\n  return proto.logging.LogMessage.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.logging.LogMessage} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.logging.LogMessage}\n */\nproto.logging.LogMessage.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n      case 1:\n        var value = /** @type {string} */reader.readString();\n        msg.setAlgoid(value);\n        break;\n      case 2:\n        var value = /** @type {number} */reader.readInt32();\n        msg.setAlgoInstance(value);\n        break;\n      case 3:\n        var value = new google_protobuf_timestamp_pb.Timestamp();\n        reader.readMessage(value, google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);\n        msg.setLogTime(value);\n        break;\n      case 4:\n        var value = /** @type {string} */reader.readString();\n        msg.setLogLevel(value);\n        break;\n      case 5:\n        var value = /** @type {string} */reader.readString();\n        msg.setMessage(value);\n        break;\n      case 6:\n        var value = /** @type {string} */reader.readString();\n        msg.setMessengerMethod(value);\n        break;\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n  return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.logging.LogMessage.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.logging.LogMessage.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.logging.LogMessage} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.logging.LogMessage.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getAlgoid();\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n  f = message.getAlgoInstance();\n  if (f !== 0) {\n    writer.writeInt32(2, f);\n  }\n  f = message.getLogTime();\n  if (f != null) {\n    writer.writeMessage(3, f, google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter);\n  }\n  f = message.getLogLevel();\n  if (f.length > 0) {\n    writer.writeString(4, f);\n  }\n  f = message.getMessage();\n  if (f.length > 0) {\n    writer.writeString(5, f);\n  }\n  f = message.getMessengerMethod();\n  if (f.length > 0) {\n    writer.writeString(6, f);\n  }\n};\n\n/**\n * optional string algoId = 1;\n * @return {string}\n */\nproto.logging.LogMessage.prototype.getAlgoid = function () {\n  return (/** @type {string} */jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n\n/**\n * @param {string} value\n * @return {!proto.logging.LogMessage} returns this\n */\nproto.logging.LogMessage.prototype.setAlgoid = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n/**\n * optional int32 algo_instance = 2;\n * @return {number}\n */\nproto.logging.LogMessage.prototype.getAlgoInstance = function () {\n  return (/** @type {number} */jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n\n/**\n * @param {number} value\n * @return {!proto.logging.LogMessage} returns this\n */\nproto.logging.LogMessage.prototype.setAlgoInstance = function (value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n/**\n * optional google.protobuf.Timestamp log_time = 3;\n * @return {?proto.google.protobuf.Timestamp}\n */\nproto.logging.LogMessage.prototype.getLogTime = function () {\n  return (/** @type{?proto.google.protobuf.Timestamp} */\n    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3)\n  );\n};\n\n/**\n * @param {?proto.google.protobuf.Timestamp|undefined} value\n * @return {!proto.logging.LogMessage} returns this\n*/\nproto.logging.LogMessage.prototype.setLogTime = function (value) {\n  return jspb.Message.setWrapperField(this, 3, value);\n};\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.logging.LogMessage} returns this\n */\nproto.logging.LogMessage.prototype.clearLogTime = function () {\n  return this.setLogTime(undefined);\n};\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.logging.LogMessage.prototype.hasLogTime = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n/**\n * optional string log_level = 4;\n * @return {string}\n */\nproto.logging.LogMessage.prototype.getLogLevel = function () {\n  return (/** @type {string} */jspb.Message.getFieldWithDefault(this, 4, \"\")\n  );\n};\n\n/**\n * @param {string} value\n * @return {!proto.logging.LogMessage} returns this\n */\nproto.logging.LogMessage.prototype.setLogLevel = function (value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n\n/**\n * optional string message = 5;\n * @return {string}\n */\nproto.logging.LogMessage.prototype.getMessage = function () {\n  return (/** @type {string} */jspb.Message.getFieldWithDefault(this, 5, \"\")\n  );\n};\n\n/**\n * @param {string} value\n * @return {!proto.logging.LogMessage} returns this\n */\nproto.logging.LogMessage.prototype.setMessage = function (value) {\n  return jspb.Message.setProto3StringField(this, 5, value);\n};\n\n/**\n * optional string messenger_method = 6;\n * @return {string}\n */\nproto.logging.LogMessage.prototype.getMessengerMethod = function () {\n  return (/** @type {string} */jspb.Message.getFieldWithDefault(this, 6, \"\")\n  );\n};\n\n/**\n * @param {string} value\n * @return {!proto.logging.LogMessage} returns this\n */\nproto.logging.LogMessage.prototype.setMessengerMethod = function (value) {\n  return jspb.Message.setProto3StringField(this, 6, value);\n};\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.logging.Status.prototype.toObject = function (opt_includeInstance) {\n    return proto.logging.Status.toObject(opt_includeInstance, this);\n  };\n\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.logging.Status} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n  proto.logging.Status.toObject = function (includeInstance, msg) {\n    var f,\n      obj = {\n        status: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)\n      };\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.logging.Status}\n */\nproto.logging.Status.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.logging.Status();\n  return proto.logging.Status.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.logging.Status} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.logging.Status}\n */\nproto.logging.Status.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n      case 1:\n        var value = /** @type {boolean} */reader.readBool();\n        msg.setStatus(value);\n        break;\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n  return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.logging.Status.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.logging.Status.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.logging.Status} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.logging.Status.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getStatus();\n  if (f) {\n    writer.writeBool(1, f);\n  }\n};\n\n/**\n * optional bool status = 1;\n * @return {boolean}\n */\nproto.logging.Status.prototype.getStatus = function () {\n  return (/** @type {boolean} */jspb.Message.getBooleanFieldWithDefault(this, 1, false)\n  );\n};\n\n/**\n * @param {boolean} value\n * @return {!proto.logging.Status} returns this\n */\nproto.logging.Status.prototype.setStatus = function (value) {\n  return jspb.Message.setProto3BooleanField(this, 1, value);\n};\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.logging.OrderMessage.prototype.toObject = function (opt_includeInstance) {\n    return proto.logging.OrderMessage.toObject(opt_includeInstance, this);\n  };\n\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.logging.OrderMessage} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n  proto.logging.OrderMessage.toObject = function (includeInstance, msg) {\n    var f,\n      obj = {\n        orderid: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n        instrumenttoken: jspb.Message.getFieldWithDefault(msg, 2, 0),\n        tradingsymbol: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n        transactiontype: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n        price: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),\n        quantity: jspb.Message.getFieldWithDefault(msg, 6, 0),\n        triggerprice: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),\n        status: jspb.Message.getFieldWithDefault(msg, 8, \"\"),\n        statusmessage: jspb.Message.getFieldWithDefault(msg, 9, \"\"),\n        algorithm: jspb.Message.getFieldWithDefault(msg, 10, \"\"),\n        algoinstance: jspb.Message.getFieldWithDefault(msg, 11, 0),\n        ordertime: (f = msg.getOrdertime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),\n        ordertype: jspb.Message.getFieldWithDefault(msg, 13, \"\")\n      };\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.logging.OrderMessage}\n */\nproto.logging.OrderMessage.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.logging.OrderMessage();\n  return proto.logging.OrderMessage.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.logging.OrderMessage} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.logging.OrderMessage}\n */\nproto.logging.OrderMessage.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n      case 1:\n        var value = /** @type {string} */reader.readString();\n        msg.setOrderid(value);\n        break;\n      case 2:\n        var value = /** @type {number} */reader.readUint32();\n        msg.setInstrumenttoken(value);\n        break;\n      case 3:\n        var value = /** @type {string} */reader.readString();\n        msg.setTradingsymbol(value);\n        break;\n      case 4:\n        var value = /** @type {string} */reader.readString();\n        msg.setTransactiontype(value);\n        break;\n      case 5:\n        var value = /** @type {number} */reader.readDouble();\n        msg.setPrice(value);\n        break;\n      case 6:\n        var value = /** @type {number} */reader.readInt32();\n        msg.setQuantity(value);\n        break;\n      case 7:\n        var value = /** @type {number} */reader.readDouble();\n        msg.setTriggerprice(value);\n        break;\n      case 8:\n        var value = /** @type {string} */reader.readString();\n        msg.setStatus(value);\n        break;\n      case 9:\n        var value = /** @type {string} */reader.readString();\n        msg.setStatusmessage(value);\n        break;\n      case 10:\n        var value = /** @type {string} */reader.readString();\n        msg.setAlgorithm(value);\n        break;\n      case 11:\n        var value = /** @type {number} */reader.readInt32();\n        msg.setAlgoinstance(value);\n        break;\n      case 12:\n        var value = new google_protobuf_timestamp_pb.Timestamp();\n        reader.readMessage(value, google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);\n        msg.setOrdertime(value);\n        break;\n      case 13:\n        var value = /** @type {string} */reader.readString();\n        msg.setOrdertype(value);\n        break;\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n  return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.logging.OrderMessage.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.logging.OrderMessage.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.logging.OrderMessage} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.logging.OrderMessage.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getOrderid();\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n  f = message.getInstrumenttoken();\n  if (f !== 0) {\n    writer.writeUint32(2, f);\n  }\n  f = message.getTradingsymbol();\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n  f = message.getTransactiontype();\n  if (f.length > 0) {\n    writer.writeString(4, f);\n  }\n  f = message.getPrice();\n  if (f !== 0.0) {\n    writer.writeDouble(5, f);\n  }\n  f = message.getQuantity();\n  if (f !== 0) {\n    writer.writeInt32(6, f);\n  }\n  f = message.getTriggerprice();\n  if (f !== 0.0) {\n    writer.writeDouble(7, f);\n  }\n  f = message.getStatus();\n  if (f.length > 0) {\n    writer.writeString(8, f);\n  }\n  f = message.getStatusmessage();\n  if (f.length > 0) {\n    writer.writeString(9, f);\n  }\n  f = message.getAlgorithm();\n  if (f.length > 0) {\n    writer.writeString(10, f);\n  }\n  f = message.getAlgoinstance();\n  if (f !== 0) {\n    writer.writeInt32(11, f);\n  }\n  f = message.getOrdertime();\n  if (f != null) {\n    writer.writeMessage(12, f, google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter);\n  }\n  f = message.getOrdertype();\n  if (f.length > 0) {\n    writer.writeString(13, f);\n  }\n};\n\n/**\n * optional string orderid = 1;\n * @return {string}\n */\nproto.logging.OrderMessage.prototype.getOrderid = function () {\n  return (/** @type {string} */jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n\n/**\n * @param {string} value\n * @return {!proto.logging.OrderMessage} returns this\n */\nproto.logging.OrderMessage.prototype.setOrderid = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n/**\n * optional uint32 instrumentToken = 2;\n * @return {number}\n */\nproto.logging.OrderMessage.prototype.getInstrumenttoken = function () {\n  return (/** @type {number} */jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n\n/**\n * @param {number} value\n * @return {!proto.logging.OrderMessage} returns this\n */\nproto.logging.OrderMessage.prototype.setInstrumenttoken = function (value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n/**\n * optional string tradingSymbol = 3;\n * @return {string}\n */\nproto.logging.OrderMessage.prototype.getTradingsymbol = function () {\n  return (/** @type {string} */jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n\n/**\n * @param {string} value\n * @return {!proto.logging.OrderMessage} returns this\n */\nproto.logging.OrderMessage.prototype.setTradingsymbol = function (value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n/**\n * optional string transactionType = 4;\n * @return {string}\n */\nproto.logging.OrderMessage.prototype.getTransactiontype = function () {\n  return (/** @type {string} */jspb.Message.getFieldWithDefault(this, 4, \"\")\n  );\n};\n\n/**\n * @param {string} value\n * @return {!proto.logging.OrderMessage} returns this\n */\nproto.logging.OrderMessage.prototype.setTransactiontype = function (value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n\n/**\n * optional double price = 5;\n * @return {number}\n */\nproto.logging.OrderMessage.prototype.getPrice = function () {\n  return (/** @type {number} */jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0)\n  );\n};\n\n/**\n * @param {number} value\n * @return {!proto.logging.OrderMessage} returns this\n */\nproto.logging.OrderMessage.prototype.setPrice = function (value) {\n  return jspb.Message.setProto3FloatField(this, 5, value);\n};\n\n/**\n * optional int32 quantity = 6;\n * @return {number}\n */\nproto.logging.OrderMessage.prototype.getQuantity = function () {\n  return (/** @type {number} */jspb.Message.getFieldWithDefault(this, 6, 0)\n  );\n};\n\n/**\n * @param {number} value\n * @return {!proto.logging.OrderMessage} returns this\n */\nproto.logging.OrderMessage.prototype.setQuantity = function (value) {\n  return jspb.Message.setProto3IntField(this, 6, value);\n};\n\n/**\n * optional double triggerPrice = 7;\n * @return {number}\n */\nproto.logging.OrderMessage.prototype.getTriggerprice = function () {\n  return (/** @type {number} */jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0)\n  );\n};\n\n/**\n * @param {number} value\n * @return {!proto.logging.OrderMessage} returns this\n */\nproto.logging.OrderMessage.prototype.setTriggerprice = function (value) {\n  return jspb.Message.setProto3FloatField(this, 7, value);\n};\n\n/**\n * optional string status = 8;\n * @return {string}\n */\nproto.logging.OrderMessage.prototype.getStatus = function () {\n  return (/** @type {string} */jspb.Message.getFieldWithDefault(this, 8, \"\")\n  );\n};\n\n/**\n * @param {string} value\n * @return {!proto.logging.OrderMessage} returns this\n */\nproto.logging.OrderMessage.prototype.setStatus = function (value) {\n  return jspb.Message.setProto3StringField(this, 8, value);\n};\n\n/**\n * optional string statusMessage = 9;\n * @return {string}\n */\nproto.logging.OrderMessage.prototype.getStatusmessage = function () {\n  return (/** @type {string} */jspb.Message.getFieldWithDefault(this, 9, \"\")\n  );\n};\n\n/**\n * @param {string} value\n * @return {!proto.logging.OrderMessage} returns this\n */\nproto.logging.OrderMessage.prototype.setStatusmessage = function (value) {\n  return jspb.Message.setProto3StringField(this, 9, value);\n};\n\n/**\n * optional string algorithm = 10;\n * @return {string}\n */\nproto.logging.OrderMessage.prototype.getAlgorithm = function () {\n  return (/** @type {string} */jspb.Message.getFieldWithDefault(this, 10, \"\")\n  );\n};\n\n/**\n * @param {string} value\n * @return {!proto.logging.OrderMessage} returns this\n */\nproto.logging.OrderMessage.prototype.setAlgorithm = function (value) {\n  return jspb.Message.setProto3StringField(this, 10, value);\n};\n\n/**\n * optional int32 algoInstance = 11;\n * @return {number}\n */\nproto.logging.OrderMessage.prototype.getAlgoinstance = function () {\n  return (/** @type {number} */jspb.Message.getFieldWithDefault(this, 11, 0)\n  );\n};\n\n/**\n * @param {number} value\n * @return {!proto.logging.OrderMessage} returns this\n */\nproto.logging.OrderMessage.prototype.setAlgoinstance = function (value) {\n  return jspb.Message.setProto3IntField(this, 11, value);\n};\n\n/**\n * optional google.protobuf.Timestamp orderTime = 12;\n * @return {?proto.google.protobuf.Timestamp}\n */\nproto.logging.OrderMessage.prototype.getOrdertime = function () {\n  return (/** @type{?proto.google.protobuf.Timestamp} */\n    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 12)\n  );\n};\n\n/**\n * @param {?proto.google.protobuf.Timestamp|undefined} value\n * @return {!proto.logging.OrderMessage} returns this\n*/\nproto.logging.OrderMessage.prototype.setOrdertime = function (value) {\n  return jspb.Message.setWrapperField(this, 12, value);\n};\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.logging.OrderMessage} returns this\n */\nproto.logging.OrderMessage.prototype.clearOrdertime = function () {\n  return this.setOrdertime(undefined);\n};\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.logging.OrderMessage.prototype.hasOrdertime = function () {\n  return jspb.Message.getField(this, 12) != null;\n};\n\n/**\n * optional string orderType = 13;\n * @return {string}\n */\nproto.logging.OrderMessage.prototype.getOrdertype = function () {\n  return (/** @type {string} */jspb.Message.getFieldWithDefault(this, 13, \"\")\n  );\n};\n\n/**\n * @param {string} value\n * @return {!proto.logging.OrderMessage} returns this\n */\nproto.logging.OrderMessage.prototype.setOrdertype = function (value) {\n  return jspb.Message.setProto3StringField(this, 13, value);\n};\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.logging.PublishStatus.prototype.toObject = function (opt_includeInstance) {\n    return proto.logging.PublishStatus.toObject(opt_includeInstance, this);\n  };\n\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.logging.PublishStatus} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n  proto.logging.PublishStatus.toObject = function (includeInstance, msg) {\n    var f,\n      obj = {\n        status: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)\n      };\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.logging.PublishStatus}\n */\nproto.logging.PublishStatus.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.logging.PublishStatus();\n  return proto.logging.PublishStatus.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.logging.PublishStatus} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.logging.PublishStatus}\n */\nproto.logging.PublishStatus.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n      case 1:\n        var value = /** @type {boolean} */reader.readBool();\n        msg.setStatus(value);\n        break;\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n  return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.logging.PublishStatus.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.logging.PublishStatus.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.logging.PublishStatus} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.logging.PublishStatus.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getStatus();\n  if (f) {\n    writer.writeBool(1, f);\n  }\n};\n\n/**\n * optional bool status = 1;\n * @return {boolean}\n */\nproto.logging.PublishStatus.prototype.getStatus = function () {\n  return (/** @type {boolean} */jspb.Message.getBooleanFieldWithDefault(this, 1, false)\n  );\n};\n\n/**\n * @param {boolean} value\n * @return {!proto.logging.PublishStatus} returns this\n */\nproto.logging.PublishStatus.prototype.setStatus = function (value) {\n  return jspb.Message.setProto3BooleanField(this, 1, value);\n};\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.logging.CData.prototype.toObject = function (opt_includeInstance) {\n    return proto.logging.CData.toObject(opt_includeInstance, this);\n  };\n\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.logging.CData} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n  proto.logging.CData.toObject = function (includeInstance, msg) {\n    var f,\n      obj = {\n        algoid: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n        algoInstance: jspb.Message.getFieldWithDefault(msg, 2, 0),\n        chartid: jspb.Message.getFieldWithDefault(msg, 3, 0),\n        chartdataid: jspb.Message.getFieldWithDefault(msg, 4, 0),\n        t: (f = msg.getT()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),\n        instrumenttoken: jspb.Message.getFieldWithDefault(msg, 6, 0),\n        d: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),\n        xlabel: jspb.Message.getFieldWithDefault(msg, 8, \"\"),\n        ylabel: jspb.Message.getFieldWithDefault(msg, 9, \"\"),\n        arg: jspb.Message.getFieldWithDefault(msg, 10, \"\"),\n        arg2: jspb.Message.getFloatingPointFieldWithDefault(msg, 11, 0.0)\n      };\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.logging.CData}\n */\nproto.logging.CData.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.logging.CData();\n  return proto.logging.CData.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.logging.CData} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.logging.CData}\n */\nproto.logging.CData.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n      case 1:\n        var value = /** @type {string} */reader.readString();\n        msg.setAlgoid(value);\n        break;\n      case 2:\n        var value = /** @type {number} */reader.readInt32();\n        msg.setAlgoInstance(value);\n        break;\n      case 3:\n        var value = /** @type {number} */reader.readInt32();\n        msg.setChartid(value);\n        break;\n      case 4:\n        var value = /** @type {number} */reader.readInt32();\n        msg.setChartdataid(value);\n        break;\n      case 5:\n        var value = new google_protobuf_timestamp_pb.Timestamp();\n        reader.readMessage(value, google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);\n        msg.setT(value);\n        break;\n      case 6:\n        var value = /** @type {number} */reader.readUint32();\n        msg.setInstrumenttoken(value);\n        break;\n      case 7:\n        var value = /** @type {number} */reader.readDouble();\n        msg.setD(value);\n        break;\n      case 8:\n        var value = /** @type {string} */reader.readString();\n        msg.setXlabel(value);\n        break;\n      case 9:\n        var value = /** @type {string} */reader.readString();\n        msg.setYlabel(value);\n        break;\n      case 10:\n        var value = /** @type {string} */reader.readString();\n        msg.setArg(value);\n        break;\n      case 11:\n        var value = /** @type {number} */reader.readDouble();\n        msg.setArg2(value);\n        break;\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n  return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.logging.CData.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.logging.CData.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.logging.CData} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.logging.CData.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getAlgoid();\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n  f = message.getAlgoInstance();\n  if (f !== 0) {\n    writer.writeInt32(2, f);\n  }\n  f = message.getChartid();\n  if (f !== 0) {\n    writer.writeInt32(3, f);\n  }\n  f = message.getChartdataid();\n  if (f !== 0) {\n    writer.writeInt32(4, f);\n  }\n  f = message.getT();\n  if (f != null) {\n    writer.writeMessage(5, f, google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter);\n  }\n  f = message.getInstrumenttoken();\n  if (f !== 0) {\n    writer.writeUint32(6, f);\n  }\n  f = message.getD();\n  if (f !== 0.0) {\n    writer.writeDouble(7, f);\n  }\n  f = message.getXlabel();\n  if (f.length > 0) {\n    writer.writeString(8, f);\n  }\n  f = message.getYlabel();\n  if (f.length > 0) {\n    writer.writeString(9, f);\n  }\n  f = message.getArg();\n  if (f.length > 0) {\n    writer.writeString(10, f);\n  }\n  f = message.getArg2();\n  if (f !== 0.0) {\n    writer.writeDouble(11, f);\n  }\n};\n\n/**\n * optional string algoId = 1;\n * @return {string}\n */\nproto.logging.CData.prototype.getAlgoid = function () {\n  return (/** @type {string} */jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n\n/**\n * @param {string} value\n * @return {!proto.logging.CData} returns this\n */\nproto.logging.CData.prototype.setAlgoid = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n/**\n * optional int32 algo_instance = 2;\n * @return {number}\n */\nproto.logging.CData.prototype.getAlgoInstance = function () {\n  return (/** @type {number} */jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n\n/**\n * @param {number} value\n * @return {!proto.logging.CData} returns this\n */\nproto.logging.CData.prototype.setAlgoInstance = function (value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n/**\n * optional int32 chartId = 3;\n * @return {number}\n */\nproto.logging.CData.prototype.getChartid = function () {\n  return (/** @type {number} */jspb.Message.getFieldWithDefault(this, 3, 0)\n  );\n};\n\n/**\n * @param {number} value\n * @return {!proto.logging.CData} returns this\n */\nproto.logging.CData.prototype.setChartid = function (value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n/**\n * optional int32 chartdataId = 4;\n * @return {number}\n */\nproto.logging.CData.prototype.getChartdataid = function () {\n  return (/** @type {number} */jspb.Message.getFieldWithDefault(this, 4, 0)\n  );\n};\n\n/**\n * @param {number} value\n * @return {!proto.logging.CData} returns this\n */\nproto.logging.CData.prototype.setChartdataid = function (value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n/**\n * optional google.protobuf.Timestamp t = 5;\n * @return {?proto.google.protobuf.Timestamp}\n */\nproto.logging.CData.prototype.getT = function () {\n  return (/** @type{?proto.google.protobuf.Timestamp} */\n    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5)\n  );\n};\n\n/**\n * @param {?proto.google.protobuf.Timestamp|undefined} value\n * @return {!proto.logging.CData} returns this\n*/\nproto.logging.CData.prototype.setT = function (value) {\n  return jspb.Message.setWrapperField(this, 5, value);\n};\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.logging.CData} returns this\n */\nproto.logging.CData.prototype.clearT = function () {\n  return this.setT(undefined);\n};\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.logging.CData.prototype.hasT = function () {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n/**\n * optional uint32 instrumentToken = 6;\n * @return {number}\n */\nproto.logging.CData.prototype.getInstrumenttoken = function () {\n  return (/** @type {number} */jspb.Message.getFieldWithDefault(this, 6, 0)\n  );\n};\n\n/**\n * @param {number} value\n * @return {!proto.logging.CData} returns this\n */\nproto.logging.CData.prototype.setInstrumenttoken = function (value) {\n  return jspb.Message.setProto3IntField(this, 6, value);\n};\n\n/**\n * optional double d = 7;\n * @return {number}\n */\nproto.logging.CData.prototype.getD = function () {\n  return (/** @type {number} */jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0)\n  );\n};\n\n/**\n * @param {number} value\n * @return {!proto.logging.CData} returns this\n */\nproto.logging.CData.prototype.setD = function (value) {\n  return jspb.Message.setProto3FloatField(this, 7, value);\n};\n\n/**\n * optional string xlabel = 8;\n * @return {string}\n */\nproto.logging.CData.prototype.getXlabel = function () {\n  return (/** @type {string} */jspb.Message.getFieldWithDefault(this, 8, \"\")\n  );\n};\n\n/**\n * @param {string} value\n * @return {!proto.logging.CData} returns this\n */\nproto.logging.CData.prototype.setXlabel = function (value) {\n  return jspb.Message.setProto3StringField(this, 8, value);\n};\n\n/**\n * optional string ylabel = 9;\n * @return {string}\n */\nproto.logging.CData.prototype.getYlabel = function () {\n  return (/** @type {string} */jspb.Message.getFieldWithDefault(this, 9, \"\")\n  );\n};\n\n/**\n * @param {string} value\n * @return {!proto.logging.CData} returns this\n */\nproto.logging.CData.prototype.setYlabel = function (value) {\n  return jspb.Message.setProto3StringField(this, 9, value);\n};\n\n/**\n * optional string arg = 10;\n * @return {string}\n */\nproto.logging.CData.prototype.getArg = function () {\n  return (/** @type {string} */jspb.Message.getFieldWithDefault(this, 10, \"\")\n  );\n};\n\n/**\n * @param {string} value\n * @return {!proto.logging.CData} returns this\n */\nproto.logging.CData.prototype.setArg = function (value) {\n  return jspb.Message.setProto3StringField(this, 10, value);\n};\n\n/**\n * optional double arg2 = 11;\n * @return {number}\n */\nproto.logging.CData.prototype.getArg2 = function () {\n  return (/** @type {number} */jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0)\n  );\n};\n\n/**\n * @param {number} value\n * @return {!proto.logging.CData} returns this\n */\nproto.logging.CData.prototype.setArg2 = function (value) {\n  return jspb.Message.setProto3FloatField(this, 11, value);\n};\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.logging.CStatus.prototype.toObject = function (opt_includeInstance) {\n    return proto.logging.CStatus.toObject(opt_includeInstance, this);\n  };\n\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.logging.CStatus} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n  proto.logging.CStatus.toObject = function (includeInstance, msg) {\n    var f,\n      obj = {\n        status: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)\n      };\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.logging.CStatus}\n */\nproto.logging.CStatus.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.logging.CStatus();\n  return proto.logging.CStatus.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.logging.CStatus} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.logging.CStatus}\n */\nproto.logging.CStatus.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n      case 1:\n        var value = /** @type {boolean} */reader.readBool();\n        msg.setStatus(value);\n        break;\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n  return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.logging.CStatus.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.logging.CStatus.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.logging.CStatus} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.logging.CStatus.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getStatus();\n  if (f) {\n    writer.writeBool(1, f);\n  }\n};\n\n/**\n * optional bool status = 1;\n * @return {boolean}\n */\nproto.logging.CStatus.prototype.getStatus = function () {\n  return (/** @type {boolean} */jspb.Message.getBooleanFieldWithDefault(this, 1, false)\n  );\n};\n\n/**\n * @param {boolean} value\n * @return {!proto.logging.CStatus} returns this\n */\nproto.logging.CStatus.prototype.setStatus = function (value) {\n  return jspb.Message.setProto3BooleanField(this, 1, value);\n};\ngoog.object.extend(exports, proto.logging);","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}