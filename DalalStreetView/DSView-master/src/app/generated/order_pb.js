// source: src/app/protos/order.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.ordering.OrderMessage', null, global);
goog.exportSymbol('proto.ordering.PublishStatus', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ordering.OrderMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ordering.OrderMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ordering.OrderMessage.displayName = 'proto.ordering.OrderMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ordering.PublishStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ordering.PublishStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ordering.PublishStatus.displayName = 'proto.ordering.PublishStatus';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ordering.OrderMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.ordering.OrderMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ordering.OrderMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ordering.OrderMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    orderid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    instrumenttoken: jspb.Message.getFieldWithDefault(msg, 2, 0),
    tradingsymbol: jspb.Message.getFieldWithDefault(msg, 3, ""),
    transactiontype: jspb.Message.getFieldWithDefault(msg, 4, ""),
    price: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    quantity: jspb.Message.getFieldWithDefault(msg, 6, 0),
    triggerprice: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    status: jspb.Message.getFieldWithDefault(msg, 8, ""),
    statusmessage: jspb.Message.getFieldWithDefault(msg, 9, ""),
    algorithm: jspb.Message.getFieldWithDefault(msg, 10, ""),
    algoinstance: jspb.Message.getFieldWithDefault(msg, 11, 0),
    ordertime: (f = msg.getOrdertime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    ordertype: jspb.Message.getFieldWithDefault(msg, 13, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ordering.OrderMessage}
 */
proto.ordering.OrderMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ordering.OrderMessage;
  return proto.ordering.OrderMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ordering.OrderMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ordering.OrderMessage}
 */
proto.ordering.OrderMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setInstrumenttoken(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTradingsymbol(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransactiontype(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrice(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setQuantity(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTriggerprice(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatusmessage(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setAlgorithm(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAlgoinstance(value);
      break;
    case 12:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setOrdertime(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrdertype(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ordering.OrderMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ordering.OrderMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ordering.OrderMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ordering.OrderMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrderid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getInstrumenttoken();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getTradingsymbol();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTransactiontype();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getQuantity();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getTriggerprice();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getStatusmessage();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getAlgorithm();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getAlgoinstance();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getOrdertime();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getOrdertype();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
};


/**
 * optional string orderid = 1;
 * @return {string}
 */
proto.ordering.OrderMessage.prototype.getOrderid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ordering.OrderMessage} returns this
 */
proto.ordering.OrderMessage.prototype.setOrderid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 instrumentToken = 2;
 * @return {number}
 */
proto.ordering.OrderMessage.prototype.getInstrumenttoken = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ordering.OrderMessage} returns this
 */
proto.ordering.OrderMessage.prototype.setInstrumenttoken = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string tradingSymbol = 3;
 * @return {string}
 */
proto.ordering.OrderMessage.prototype.getTradingsymbol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ordering.OrderMessage} returns this
 */
proto.ordering.OrderMessage.prototype.setTradingsymbol = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string transactionType = 4;
 * @return {string}
 */
proto.ordering.OrderMessage.prototype.getTransactiontype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ordering.OrderMessage} returns this
 */
proto.ordering.OrderMessage.prototype.setTransactiontype = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional double price = 5;
 * @return {number}
 */
proto.ordering.OrderMessage.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ordering.OrderMessage} returns this
 */
proto.ordering.OrderMessage.prototype.setPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional int32 quantity = 6;
 * @return {number}
 */
proto.ordering.OrderMessage.prototype.getQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.ordering.OrderMessage} returns this
 */
proto.ordering.OrderMessage.prototype.setQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional double triggerPrice = 7;
 * @return {number}
 */
proto.ordering.OrderMessage.prototype.getTriggerprice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ordering.OrderMessage} returns this
 */
proto.ordering.OrderMessage.prototype.setTriggerprice = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional string status = 8;
 * @return {string}
 */
proto.ordering.OrderMessage.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.ordering.OrderMessage} returns this
 */
proto.ordering.OrderMessage.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string statusMessage = 9;
 * @return {string}
 */
proto.ordering.OrderMessage.prototype.getStatusmessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.ordering.OrderMessage} returns this
 */
proto.ordering.OrderMessage.prototype.setStatusmessage = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string algorithm = 10;
 * @return {string}
 */
proto.ordering.OrderMessage.prototype.getAlgorithm = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.ordering.OrderMessage} returns this
 */
proto.ordering.OrderMessage.prototype.setAlgorithm = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional int32 algoInstance = 11;
 * @return {number}
 */
proto.ordering.OrderMessage.prototype.getAlgoinstance = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.ordering.OrderMessage} returns this
 */
proto.ordering.OrderMessage.prototype.setAlgoinstance = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional google.protobuf.Timestamp orderTime = 12;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.ordering.OrderMessage.prototype.getOrdertime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 12));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.ordering.OrderMessage} returns this
*/
proto.ordering.OrderMessage.prototype.setOrdertime = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ordering.OrderMessage} returns this
 */
proto.ordering.OrderMessage.prototype.clearOrdertime = function() {
  return this.setOrdertime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ordering.OrderMessage.prototype.hasOrdertime = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string orderType = 13;
 * @return {string}
 */
proto.ordering.OrderMessage.prototype.getOrdertype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.ordering.OrderMessage} returns this
 */
proto.ordering.OrderMessage.prototype.setOrdertype = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ordering.PublishStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.ordering.PublishStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ordering.PublishStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ordering.PublishStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ordering.PublishStatus}
 */
proto.ordering.PublishStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ordering.PublishStatus;
  return proto.ordering.PublishStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ordering.PublishStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ordering.PublishStatus}
 */
proto.ordering.PublishStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ordering.PublishStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ordering.PublishStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ordering.PublishStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ordering.PublishStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool status = 1;
 * @return {boolean}
 */
proto.ordering.PublishStatus.prototype.getStatus = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ordering.PublishStatus} returns this
 */
proto.ordering.PublishStatus.prototype.setStatus = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


goog.object.extend(exports, proto.ordering);
