@use '~@angular/material' as mat;
@import '../core/theming/palette';
@import '../core/theming/theming';
@import '../core/theming/check-duplicate-styles';
@import '../core/typography/typography-utils';
@import '../core/density/index';
@import './stepper-variables';

@mixin mat-stepper-color($config-or-theme) {
  $config: mat-get-color-config($config-or-theme);
  $foreground: map-get($config, foreground);
  $background: map-get($config, background);
  $primary: map-get($config, primary);
  $warn: map-get($config, warn);

  .mat-step-header {
    &.cdk-keyboard-focused,
    &.cdk-program-focused,
    &:hover {
      background-color: mat.get-color-from-palette($background, hover);
    }

    // On touch devices the :hover state will linger on the element after a tap.
    // Reset it via `@media` after the declaration, because the media query isn't
    // supported by all browsers yet.
    @media (hover: none) {
      &:hover {
        background: none;
      }
    }

    .mat-step-label,
    .mat-step-optional {
      // TODO(josephperrott): Update to using a corrected disabled-text contrast
      // instead of secondary-text.
      color: mat.get-color-from-palette($foreground, secondary-text);
    }

    .mat-step-icon {
      // TODO(josephperrott): Update to using a corrected disabled-text contrast
      // instead of secondary-text.
      background-color: mat.get-color-from-palette($foreground, secondary-text);
      color: mat.get-color-from-palette($primary, default-contrast);
    }

    .mat-step-icon-selected,
    .mat-step-icon-state-done,
    .mat-step-icon-state-edit {
      background-color: mat.get-color-from-palette($primary);
      color: mat.get-color-from-palette($primary, default-contrast);
    }

    .mat-step-icon-state-error {
      background-color: transparent;
      color: mat.get-color-from-palette($warn, text);
    }

    .mat-step-label.mat-step-label-active {
      color: mat.get-color-from-palette($foreground, text);
    }

    .mat-step-label.mat-step-label-error {
      color: mat.get-color-from-palette($warn, text);
    }
  }

  .mat-stepper-horizontal, .mat-stepper-vertical {
    background-color: mat.get-color-from-palette($background, card);
  }

  .mat-stepper-vertical-line::before {
    border-left-color: mat.get-color-from-palette($foreground, divider);
  }

  .mat-horizontal-stepper-header::before,
  .mat-horizontal-stepper-header::after,
  .mat-stepper-horizontal-line {
    border-top-color: mat.get-color-from-palette($foreground, divider);
  }
}

@mixin mat-stepper-typography($config-or-theme) {
  $config: mat-get-typography-config($config-or-theme);
  .mat-stepper-vertical, .mat-stepper-horizontal {
    font-family: mat.font-family($config);
  }

  .mat-step-label {
    font: {
      size: mat.font-size($config, body-1);
      weight: mat.font-weight($config, body-1);
    };
  }

  .mat-step-sub-label-error {
    font-weight: normal;
  }

  .mat-step-label-error {
    font-size: mat.font-size($config, body-2);
  }

  .mat-step-label-selected {
    font: {
      size: mat.font-size($config, body-2);
      weight: mat.font-weight($config, body-2);
    };
  }
}

@mixin _mat-stepper-density($config-or-theme) {
  $density-scale: mat-get-density-config($config-or-theme);
  $height: _mat-density-prop-value($mat-stepper-density-config, $density-scale, height);
  $vertical-padding: ($height - 24px) / 2;

  @include _mat-density-legacy-compatibility() {
    .mat-horizontal-stepper-header {
      height: $height;
    }

    .mat-stepper-label-position-bottom .mat-horizontal-stepper-header,
    .mat-vertical-stepper-header, {
      padding: $vertical-padding 24px;
    }

    // Ensures that the vertical lines for the step content exceed into the step
    // headers with a given distance (`$mat-stepper-line-gap`) to the step icon.
    .mat-stepper-vertical-line::before {
      top: 8px - $vertical-padding;
      bottom: 8px - $vertical-padding;
    }

    // Ensures that the horizontal lines for the step header are centered vertically.
    .mat-stepper-label-position-bottom .mat-horizontal-stepper-header {
      &::after, &::before {
        top: $vertical-padding + 24px / 2;
      }
    }

    // Ensures that the horizontal line for the step content is aligned centered vertically.
    .mat-stepper-label-position-bottom .mat-stepper-horizontal-line {
      top: $vertical-padding + 24px / 2;
    }
  }
}

@mixin mat-stepper-theme($theme-or-color-config) {
  $theme: _mat-legacy-get-theme($theme-or-color-config);
  @include _mat-check-duplicate-theme-styles($theme, 'mat-stepper') {
    $color: mat-get-color-config($theme);
    $density: mat-get-density-config($theme);
    $typography: mat-get-typography-config($theme);

    @if $color != null {
      @include mat.stepper-color($color);
    }
    @if $density != null {
      @include _mat-stepper-density($density);
    }
    @if $typography != null {
      @include mat.stepper-typography($typography);
    }
  }
}
